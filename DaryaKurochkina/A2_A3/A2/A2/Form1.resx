<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>